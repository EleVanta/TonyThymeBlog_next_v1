generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String         @id @default(cuid())
  name          String?
  username      String?        @unique
  password      String?
  createdAt     DateTime       @default(now())
  updateAt      DateTime       @updatedAt
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean        @default(false)
  accounts      Account[]
  sessions      Session[]
  reviews       Review[]
  usefulReview  UsefulReview[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Review {
  id          Int            @id @default(autoincrement())
  createdAt   DateTime       @default(now())
  updateAt    DateTime       @updatedAt
  recipeId    String
  score       Int
  title       String
  review      String
  recommend   String
  userId      String
  author      User?          @relation(fields: [userId], references: [id], onDelete: Cascade)
  usefulCount UsefulReview[]
}

model UsefulReview {
  id       Int     @id @default(autoincrement())
  readerId String
  reader   User?   @relation(fields: [readerId], references: [id], onDelete: Cascade)
  useful   Boolean
  review   Review? @relation(fields: [reviewId], references: [id])
  reviewId Int?
}
